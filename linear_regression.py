# -*- coding: utf-8 -*-
"""Linear regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZPC7cixXlbD4eLkyom7zukkRs7cbsS5R
"""



import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


import random

"""# Linear Regression

  using closed form solution
   - w = (X^T X)^(-1) X^T y
   - y = Xw
"""

class LinearRegression:

  def fit(self, X, y):
    a = np.linalg.pinv(np.matmul(np.transpose(X), X))   # pinv: Moore-Penrose Pseudoinverse incase matrix is non-invertible
    self.w = np.matmul(a, np.matmul(np.transpose(X), y))
    return self.w

  def predict(self, X):
    return np.matmul(np.array(X), self.w)

X = np.random.randn(2, 1)
y = np.array([2, 1])
X_test = np.array([1, 2])

model = LinearRegression()
model.fit(X, y)
print("X: ", X)
print("y: ", y)


model.predict(X)